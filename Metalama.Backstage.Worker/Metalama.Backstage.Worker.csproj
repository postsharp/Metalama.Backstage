<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <MetalamaBackstageDirectory>$(MSBuildProjectDirectory)\..\Metalama.Backstage</MetalamaBackstageDirectory>
        <IsWorkerBuild>true</IsWorkerBuild>
        <OutputType>exe</OutputType>
    </PropertyGroup>

    <Import Sdk="PostSharp.Engineering.Sdk" Project="SystemTypes.props" />

    <Import Project="$(MetalamaBackstageDirectory)\Metalama.Backstage.Common.props" />

    <PropertyGroup>
        <TargetFrameworks>netframework4.7.2;net6.0</TargetFrameworks>
        <!-- We're going to execute the dll using dotnet command on .NET Core. -->
        <UseAppHost>false</UseAppHost>
        <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
        <!-- This app should run on any .NET 6+ runtime. -->
        <RollForward>Major</RollForward>
        <OutputZipFile>bin\$(MSBuildProjectName).$(TargetFramework).zip</OutputZipFile>
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <ItemGroup>
        <Compile Include="$(MetalamaBackstageDirectory)\**\*.cs" Exclude="$(MetalamaBackstageDirectory)\obj\**\*;$(MetalamaBackstageDirectory)\bin\**\*" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)'=='netframework4.7.2'">
        <Reference Include="System.IO.Compression" />
        <Reference Include="System.Net.Http" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="K4os.Hash.xxHash" />
        <PackageReference Include="System.Collections.Immutable" />
        <PackageReference Include="JetBrains.Annotations" PrivateAssets="all" />
        <PackageReference Include="JetBrains.Profiler.SelfApi" />
    </ItemGroup>

    <Target Name="ResolveZipInputFiles" AfterTargets="Build" Condition="'$(IsCrossTargetingBuild)'!='true'">
        <ItemGroup>
            <ZipInputFiles Include="$(OutDir)\**\*" />
        </ItemGroup>
    </Target>

    <UsingTask TaskName="CreateDeterministicZip" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
        <ParameterGroup>
            <SourceDirectory ParameterType="System.String" Required="true" />
            <DestinationFile ParameterType="System.String" Required="true" />
            <PackageBuildDate ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Using Namespace="System.Globalization" />
            <Using Namespace="System.IO" />
            <Using Namespace="System.IO.Compression" />
            <Using Namespace="System.Reflection" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                var packageBuildDate = DateTime.Parse(PackageBuildDate, CultureInfo.InvariantCulture);

                File.Delete(DestinationFile);

                using (var zipArchive = ZipFile.Open(DestinationFile, ZipArchiveMode.Update))
                {
                    var files = Directory.GetFiles(SourceDirectory, "*.*") ?? throw new InvalidOperationException("Now files to pack.");

                    Array.Sort(files);

                    foreach (var file in files)
                    {
                        var entryName = Path.GetFileName(file) ?? throw new InvalidOperationException($"Failed to calculate entry name of '{file}'.");
                        var entry = zipArchive.CreateEntryFromFile(file, entryName);
                        entry.LastWriteTime = packageBuildDate;
                    }
                }
                ]]>
            </Code>
        </Task>
    </UsingTask>

    <Target Name="Zip" Inputs="@(ZipInputFiles)" Outputs="$(OutputZipFile)" AfterTargets="Build" DependsOnTargets="ResolveZipInputFiles" Condition="'$(IsCrossTargetingBuild)'!='true'">
        <Exec Command="git log -1 --format=%25%25cd --date=iso-strict" WorkingDirectory="$(MSBuildProjectDirectory)" ConsoleToMSBuild="true" EchoOff="true" StandardOutputImportance="low" Condition="'$(_PackageBuildDate)'==''">
            <Output TaskParameter="ConsoleOutput" PropertyName="_PackageBuildDate" />
        </Exec>
        <CreateDeterministicZip SourceDirectory="$(OutDir)" DestinationFile="$(OutputZipFile)" PackageBuildDate="$(_PackageBuildDate)" />
        <Message Text="$(MSBuildProjectName) -&gt; $(MSBuildProjectDirectory)\$(OutputZipFile)" Importance="High" />
    </Target>

</Project>
